### 1. Что такое динамическое программирование?
Динамическое программирование (ДП) — это метод решения сложных задач, который разбивает их на более простые подзадачи и решает каждую из них только один раз, сохраняя результаты для последующего использования. Это позволяет избежать повторного вычисления одних и тех же подзадач, что значительно ускоряет процесс решения.

### 2. Какой смысл имеет выражение «динамическое программирование» в теории многошаговой оптимизации?
В контексте многошаговой оптимизации динамическое программирование позволяет находить оптимальные решения, принимая во внимание последовательность решений на каждом шаге. Это означает, что решение на текущем шаге зависит от решений на предыдущих шагах. ДП помогает формализовать и оптимизировать такие зависимости, что позволяет находить глобально оптимальные решения для задач, которые могут быть разбиты на подзадачи.

### 3. Какие шаги нужно выполнить, чтобы применить динамическое программирование к решению какой-либо задачи?
Чтобы применить динамическое программирование, необходимо выполнить следующие шаги:
1. **Определить структуру оптимальности**: понять, как оптимальное решение задачи может быть выражено через оптимальные решения её подзадач.
2. **Разбить задачу на подзадачи**: определить, какие подзадачи необходимо решить для достижения решения исходной задачи.
3. **Сохранить результаты подзадач**: использовать таблицы или массивы для хранения результатов подзадач, чтобы избежать повторных вычислений.
4. **Рекурсивно или итеративно решать подзадачи**: использовать рекурсию или итерацию для вычисления значений подзадач, начиная с базовых случаев и продвигаясь к более сложным.
5. **Собрать решение**: на основе сохранённых результатов подзадач собрать решение для исходной задачи.

### 4. За счёт чего удаётся ускорить решение сложных задач методом динамического программирования?
Ускорение достигается за счёт:
- **Избежания повторных вычислений**: результаты подзадач сохраняются и используются повторно, что значительно сокращает общее количество вычислений.
- **Структурирования решения**: задачи разбиваются на более простые подзадачи, что упрощает процесс их решения.
- **Оптимизации по времени**: многие задачи, которые в наивном подходе имеют экспоненциальную сложность, могут быть решены за полиномиальное время с помощью ДП.

### 5. Какие ограничения есть у метода динамического программирования?
Метод динамического программирования имеет несколько ограничений:
- **Память**: ДП может требовать значительных объёмов памяти для хранения результатов подзадач, что может быть проблемой для задач с большим количеством состояний.
- **Сложность**: Не все задачи могут быть эффективно решены с помощью ДП. Некоторые задачи могут не иметь структуры оптимальности, необходимой для применения этого метода.
- **Требования к формализации**: Для успешного применения ДП необходимо чётко определить структуру оптимальности и подзадачи, что может быть не всегда очевидно.
- **Время выполнения**: Хотя ДП значительно ускоряет решение по сравнению с наивными методами, в некоторых случаях оно всё равно может быть медленным для очень больших входных данных.
