42
1. **Что такое стек? Какие операции со стеком разрешены?**
   Стек — это структура данных, работающая по принципу "последний пришёл — первый вышел" (LIFO, Last In First Out). Основные операции со стеком:
   - **push**: добавление элемента на вершину стека.
   - **pop**: удаление элемента с вершины стека.
   - **peek** (или **top**): получение значения элемента на вершине стека без его удаления.
   - **isEmpty**: проверка, пуст ли стек.

2. **Как используется системный стек при выполнении программ?**
   Системный стек используется для хранения информации о вызовах функций, включая адреса возврата, параметры функций и локальные переменные. При каждом вызове функции создаётся новый фрейм стека, который содержит все необходимые данные для выполнения этой функции. Когда функция завершает выполнение, её фрейм удаляется из стека, и управление передаётся обратно по адресу возврата.

3. **Какие ошибки могут возникнуть при использовании стека?**
   - **Переполнение стека** (stack overflow): происходит, когда стек заполняется, например, из-за слишком глубокой рекурсии или чрезмерного использования памяти.
   - **Недостаток памяти** (stack underflow): возникает, когда происходит попытка удалить элемент из пустого стека.

4. **В каких случаях можно использовать обычный массив для моделирования стека?**
   Обычный массив можно использовать для моделирования стека, когда известен максимальный размер стека заранее. Это позволяет эффективно управлять памятью и выполнять операции push и pop за константное время. Однако, если размер стека может изменяться, лучше использовать динамические структуры данных.

5. **Как построить стек на основе динамического массива?**
   Для построения стека на основе динамического массива можно использовать следующий подход:
   - Создать массив фиксированного размера.
   - Поддерживать переменную, указывающую на вершину стека (например, `top`).
   - При добавлении элемента (push) увеличивать `top` и помещать элемент в массив.
   - При удалении элемента (pop) уменьшать `top` и возвращать элемент из массива.
   - При необходимости увеличивать размер массива (например, вдвое) и копировать элементы в новый массив, когда стек заполняется.

6. **Почему при передаче стека в подпрограммы, приведённые в параграфе, соответствующий параметр должен быть изменяемым?**
   Стек может изменяться в процессе выполнения подпрограммы (например, элементы могут добавляться или удаляться). Если стек передан как неизменяемый параметр, изменения, внесённые в стек внутри подпрограммы, не будут отражены в оригинальном стеке, что может привести к несоответствию данных. Изменяемый параметр позволяет подпрограмме модифицировать оригинальный стек.

7. **Что такое очередь? Какие операции она допускает?**
   Очередь — это структура данных, работающая по принципу "первый пришёл — первый вышел" (FIFO, First In First Out). Основные операции с очередью:
   - **enqueue**: добавление элемента в конец очереди.
   - **dequeue**: удаление элемента из начала очереди.
   - **peek** (или **front**): получение значения элемента в начале очереди без его удаления.
   - **isEmpty**: проверка, пуста ли очередь.

8. **Приведите примеры задач, в которых можно использовать очередь.**
   - **Управление задачами в операционных системах**: очереди используются для планирования выполнения процессов.
   - **Обработка запросов на сервере**: запросы могут обрабатываться в порядке их поступления.
   - **Широковещательная передача данных**: очереди могут использоваться для передачи сообщений между различными компонентами системы.
   - **Моделирование очередей в магазинах или банках**: для анализа времени ожидания клиентов.
